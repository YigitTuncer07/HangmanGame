import java.util.Scanner;

public class Hangman {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Welcome to hangman!");
        int a = 0;
        while (a == 0) {
            hangman(randomStringPicker());
            System.out.print("Press 1 to play again or any other number to stop: ");
            int userInput = scanner.nextInt();
            if (userInput != 1){
                a++;
            }
        }
    }

    public static char[][] gridMaker(int wrongAnswers) {
        char[][] grid0 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid1 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid2 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid3 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid4 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid5 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid6 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid7 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid8 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid9 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid10 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', '|', ' ', '\\', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid11 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', '|', ' ', '\\', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid12 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', '|', ' ', '\\', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid13 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', '|', ' ', '\\', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', ' ', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        char[][] grid14 = {{' ', ' ', ' ', ' ', '_', '_', '_', '_', '_', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '(', ' ', ')', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', '|', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', '|', ' ', '\\', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', '/', ' ', '\\', ' ', ' ', ' ', '|'},
                {' ', ' ', '/', ' ', ' ', ' ', '\\', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
                {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'}};

        if (wrongAnswers == 0){
            return grid0;
        } else if (wrongAnswers == 1){
            return grid1;
        } else if (wrongAnswers == 2){
            return grid2;
        } else if (wrongAnswers == 3){
            return grid3;
        } else if (wrongAnswers == 4){
            return grid4;
        } else if (wrongAnswers == 5){
            return grid5;
        } else if (wrongAnswers == 6){
            return grid6;
        } else if (wrongAnswers == 7){
            return grid7;
        } else if (wrongAnswers == 8){
            return grid8;
        } else if (wrongAnswers == 9){
            return grid9;
        } else if (wrongAnswers == 10){
            return grid10;
        } else if (wrongAnswers == 11){
            return grid11;
        } else if (wrongAnswers == 12){
            return grid12;
        } else if (wrongAnswers == 13){
            return grid13;
        } else {
            return grid14;
        }
    }

    public static void twoDimensionalArrayPrinter(char[][] grid) {
        for (int i = 0; i < grid.length; i++) {
            System.out.println(" ");
            for (int k = 0; k < grid[i].length; k++) {
                System.out.print(grid[i][k]);
            }
        }
    }

    public static void oneDimensionalArrayPrinter(char[] array) {
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i]);
        }
    }

    public static void hangman(String string) {
        Scanner scanner = new Scanner(System.in);
        char[] word = new char[string.length()];
        for (int i = 0; i < string.length(); i++) {
            word[i] = string.charAt(i);
        }
        char[] placeholder = new char[string.length()];
        for (int i = 0; i < string.length(); i++) {
            placeholder[i] = '_';
        }
        if (contains(' ',word)){
            for (int i = 0; i < word.length; i++){
                if (word[i] == ' '){
                    placeholder[i] = ' ';
                }
            }
        }
        char[] wrongLetters = new char[25];
        for(int i = 0; i < wrongLetters.length; i++){
            wrongLetters[i] = ' ';
        }
        int wrongAnswers = 0;
        for (int i = 0; i < 50; i++) {
            if (String.valueOf(placeholder).equals(String.valueOf(word))) {
                System.out.println(word);
                System.out.println("You win!");
                System.exit(0);
            }
            if (wrongAnswers == 14){
                System.out.println("You lose, the word was " + String.valueOf(word) + ".");
                System.exit(0);
            }
            twoDimensionalArrayPrinter(gridMaker(wrongAnswers));
            System.out.println(" ");
            System.out.println(" ");
            oneDimensionalArrayPrinter(placeholder);
            System.out.println(" ");
            System.out.print("Letters you've already tried: ");
            oneDimensionalArrayPrinter(wrongLetters);
            System.out.println(" ");
            System.out.print("Enter a letter: ");
            char char1 = scanner.nextLine().toLowerCase().charAt(0);
            if (!contains(char1,word)){
                if (contains(char1,wrongLetters)){
                    System.out.println("You have already tried that letter, try again");
                } else {
                    System.out.println("The word does not contain " + char1 + ". Try again: ");
                    wrongLetters[wrongAnswers] = char1;
                    wrongAnswers++;
                }
            }
            for (int k = 0; k < word.length; k++) {
                if (word[k] == char1) {
                    placeholder[k] = char1;
                }
            }
        }
        System.out.println("You've tried too many times, you lose!");
        System.exit(0);
    }
    public static boolean contains(char char1,char[] word){
        for (int i = 0; i < word.length; i++){
            if (word[i] == char1){
                return true;
            }
        }
        return false;
    }
    public static String randomStringPicker(){
        String[] words = {"apple","blue whale","turkey","america","marmara","istanbul","physics","yigit tuncer is very smart","programming","video games"};
        int a = (int)(Math.random() * words.length);
        return words[a];
    }
}


